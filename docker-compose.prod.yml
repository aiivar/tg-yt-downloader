version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: tg-yt-downloader-prod
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/tg_yt_downloader
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - TELEGRAM_API_USE_LOCAL=${TELEGRAM_API_USE_LOCAL:-true}
      - TELEGRAM_API_LOCAL_URL=${TELEGRAM_API_LOCAL_URL:-http://telegram-bot-api:8081}
      - TELEGRAM_API_LOCAL_CREDENTIALS_PATH=${TELEGRAM_API_LOCAL_CREDENTIALS_PATH:-/path/to/credentials.json}
    depends_on:
      db:
        condition: service_healthy
      telegram-bot-api:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    # Set memory limits to prevent memory issues
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    container_name: telegram-bot-api-prod
    ports:
      - "8081:8081"
    environment:
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    volumes:
      - telegram_bot_api_data_prod:/var/lib/telegram-bot-api
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/bot${TELEGRAM_BOT_TOKEN}/getMe"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:15-alpine
    container_name: tg-yt-downloader-db-prod
    environment:
      - POSTGRES_DB=tg_yt_downloader
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tg_yt_downloader"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_prod:
  telegram_bot_api_data_prod:

networks:
  app-network:
    driver: bridge
